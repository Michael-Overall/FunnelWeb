@model EntrySummary

<article class='post-line @String.Join(" ", Html.CssKeywordsFor(Model))'>
	@Html.DisplayFor(x => x.Published, new { @class = "revised" })
	<div class='comments'>
		@if (!Model.HideComments)
		{
			if (Html.Settings().EnableDisqusCommenting)
			{
				@Scripts.Render("~/bundles/disqus-count")
				<a href="@Url.Action("Page", "Wiki", new { page = Model.Name })#disqus_thread" data-disqus-identifier="@(Model.Title == null ? "" : (Model.Title + " - "))@Html.Settings().SiteTitle">Comment(s)</a>
			}
			else
			{
				<a href='@Url.Action("Page", "Wiki", new { page = Model.Name })#comments'>
					<span class='comment-count'>@Model.CommentCount</span>
					<span>comment@(Model.CommentCount == 1 ? "" : "s")</span>
				</a>
			}
		}
	</div>
	<div class='summary'>
        <header>
            <h2 class="post-title">@Html.ActionLink(Model.Title, "Page", "Wiki", new { page = Model.Name }, null)</h2>
            <ul class="post-meta">
                <li class="post-pubdate"><span class="icon-calendar icon-large"/></li>
                <li class="post-comments"><span class="icon-comment icon-large"/></li>
                <li class="post-tags"><span class="icon-tag icon-large"/></li>
            </ul>
        </header>
		@if (!string.IsNullOrEmpty(Model.MetaDescription))
		{
			<p>@Html.RenderTrusted(Model.MetaDescription, Formats.Markdown)</p>
		}
		@Html.DisplayFor(x => Model.TagsCommaSeparated)
	</div>
</article>
